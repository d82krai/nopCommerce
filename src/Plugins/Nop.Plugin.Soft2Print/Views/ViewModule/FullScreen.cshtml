@model ViewModel.ViewModule
@{
    Layout = "_Root.Head";

    //title
    if (Model.ViewMode == Models.ViewMode.Edit)
    {
        Html.AddTitleParts(T(ResourceCollection.Key.ViewModule.PageTitel.Edit).ToString());
    }
    else if (Model.ViewMode == Models.ViewMode.View)
    {
        Html.AddTitleParts(T(ResourceCollection.Key.ViewModule.PageTitel.View).ToString());
    }

    //page class
    Html.AppendPageCssClassParts("html-s2p-page");
    Html.AppendPageCssClassParts("html-viewmodule-page");
    Html.AppendCssFileParts(Plugin.Location + "Styles/ViewModule.css");
}
@await Component.InvokeAsync("Widget", new { widgetZone = "body_start_html_tag_after" })
@await Html.PartialAsync("_Notifications")
@await Html.PartialAsync("_JavaScriptDisabledWarning")
@await Html.PartialAsync("_OldInternetExplorerWarning")
<div class="master-wrapper-page s2p-page viewmodule-page">
    @await Component.InvokeAsync("AdminHeaderLinks")
    <div class="viewmodule-container">
        @await Html.PartialAsync(Plugin.Location + "Views/ViewModule/_IFrame.cshtml", Model)
    </div>
</div>
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = "body_end_html_tag_before" })